name: Generate Test Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Configurar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Instalar .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # Instalar dependencias de Playwright (ajustar si no usas Playwright)
      - name: Install Playwright dependencies
        run: |
          dotnet build project/tests/UI/AppTest.csproj
          pwsh ./project/tests/UI/bin/Debug/net8.0/playwright.ps1 install

      # Limpiar videos anteriores (si existen)
      - name: Clean old videos
        run: rm -rf project/tests/UI/videos

      # Construir y ejecutar pruebas
      - name: Build and Test
        run: |
          dotnet build project/tests/UI/AppTest.csproj
          dotnet test project/tests/UI/AppTest.csproj --collect:"XPlat Code Coverage"

      # Subir videos como artefactos
      - name: Upload Test Videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-videos
          path: project/tests/UI/videos/

      # Generar Reporte de Cobertura
      - name: Generate Coverage Report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          export PATH="$PATH:~/.dotnet/tools"
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:HTML

      # Publicar artefactos (Reporte HTML)
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage-report/

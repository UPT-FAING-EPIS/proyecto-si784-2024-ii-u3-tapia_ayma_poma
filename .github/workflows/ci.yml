name: CI Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: |
          cd project
          composer install

      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    name: Run Snyk Analysis
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: |
          cd project
          composer install

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code test
        run: |
          snyk code test --sarif-file-output=project/informes/snyk/snyk.sarif --json-file-output=project/informes/snyk/snyk-report.json || echo "Snyk code test completed with issues"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Check SARIF file existence
        run: ls -la project/informes/snyk/snyk.sarif

      - name: Generate HTML report from SARIF
        run: |
          npm install -g snyk-to-html
          snyk-to-html -i project/informes/snyk/snyk.sarif -o project/informes/snyk/snyk-report.html

      - name: Check HTML report existence
        run: ls -la project/informes/snyk/snyk-report.html

      - name: Upload Snyk SARIF result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: project/informes/snyk/snyk.sarif

  semgrep:
    name: Run Semgrep Analysis
    runs-on: ubuntu-latest
    needs: snyk

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Semgrep
        run: docker pull semgrep/semgrep

      - name: Run Semgrep (SARIF Output)
        run: |
          docker run --rm -v $(pwd):/src semgrep/semgrep semgrep scan --config="p/php" --sarif --output=project/informes/segrem/report.sarif --metrics=off

      - name: Upload SARIF result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: project/informes/segrem/report.sarif

      - name: Run Semgrep (JSON Output)
        run: |
          docker run --rm -v $(pwd):/src semgrep/semgrep semgrep scan --config="p/php" --json --output project/informes/segrem/semgrep.json --metrics=off

      - name: Install prospector-html
        run: |
          python -m pip install --upgrade pip
          pip install prospector2html

      - name: Convert Semgrep results to HTML
        run: |
          prospector-html --input project/informes/segrem/semgrep.json --output project/informes/segrem/semgrep-report.html --filter semgrep || true

  phpunit:
    name: Run PHPUnit Tests
    runs-on: ubuntu-latest
    needs: semgrep  # Ensure this runs after Semgrep

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: xdebug

      - name: Install dependencies
        run: |
          cd project
          composer install

      - name: Fix permissions for PHPUnit
        run: |
          cd project
          chmod +x vendor/bin/phpunit

      - name: Run PHPUnit tests
        run: |
          cd project
          php vendor/bin/phpunit --coverage-html informes/pruebasunitarias

  commit_and_push_reports:
    name: Commit and Push All Reports
    runs-on: ubuntu-latest
    needs: [sonarcloud, snyk, semgrep, phpunit]  # Ensures this runs after all analysis and tests are completed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Commit and push all reports to main branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add project/informes/*
          git commit -m "Add analysis and test reports" || echo "No changes to commit"
          
          # Ensure any uncommitted changes are discarded
          git reset --hard

          # Rebase to ensure remote changes are included
          git pull origin main --rebase

          # Push changes to main
          git push origin main

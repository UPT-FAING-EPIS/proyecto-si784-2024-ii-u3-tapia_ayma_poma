name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar PHP 8.2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Instalar dependencias (si usas Composer)
      - name: Install dependencies
        run: |
          cd project  # Cambiar a la carpeta del proyecto
          composer install

      # Ejecutar el análisis de SonarCloud utilizando el archivo 'sonar-project.properties'
      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: project  # Ruta al directorio base donde está el archivo 'sonar-project.properties'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Usa el token almacenado en los secretos

      # Generar reporte SARIF (usando la API de SonarCloud)
      - name: Generate SARIF Report
        run: |
          curl -u ${SONAR_TOKEN}: -X POST "https://sonarcloud.io/api/ce/submit?projectKey=${{ secrets.SONAR_PROJECT_KEY }}" --output project/informes/sonarqube/sonar-report.sarif

      # Subir reporte SARIF a GitHub Code Scanning
      - name: Upload SARIF result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: project/informes/sonarqube/sonar-report.sarif  # Subir el archivo SARIF generado

      # Generar reporte HTML con SonarQube
      - name: Generate HTML Report
        run: |
          curl -u ${SONAR_TOKEN}: -X GET "https://sonarcloud.io/api/reports/generate?reportFormat=html&projectKey=${{ secrets.SONAR_PROJECT_KEY }}" --output project/informes/sonarqube/sonar-report.html

      # Mover cualquier otro reporte necesario a 'project/informes/sonarqube'
      - name: Move other reports to SonarQube folder
        run: |
          mkdir -p project/informes/sonarqube
          mv sonar-report.html project/informes/sonarqube/
          mv sonar-report.sarif project/informes/sonarqube/

      # Configurar Git para hacer commit en la rama main
      - name: Configure Git for main branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Commit y push de los informes a la rama main
      - name: Push SonarQube reports to main branch
        run: |
          git add project/informes/sonarqube/*
          git commit -m "Add SonarQube reports" || echo "No changes to commit"
          
          # Limpiar cualquier cambio no confirmado
          git reset --hard

          # Asegurarse de que los cambios remotos estén integrados
          git pull origin main --rebase

          # Subir los cambios a la rama main
          git push origin main
